name: Build

on:
  push:
    branches: [ "main" ]
    tags: ["v*"]
  pull_request:
    branches: [ "main" ]

jobs:
  build-linux-x64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build release
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config=release
    - uses: actions/upload-artifact@v4
      with:
        name: linux-x64
        path: build/*.so

  build-linux-x86:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install multilib compilers
      run: |
        sudo apt-get update
        sudo apt-get -y install gcc-multilib g++-multilib
    - name: Build release
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS="-m32" -DCMAKE_CXX_FLAGS="-m32"
        cmake --build . --config=release
    - uses: actions/upload-artifact@v4
      with:
        name: linux-x86
        path: build/*.so

  build-linux-aarch64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install cross compiler and build utils
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake build-essential
    - name: Build release
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=/usr/bin/aarch64-linux-gnu-g++
        cmake --build . --config=release
    - uses: actions/upload-artifact@v4
      with:
        name: linux-aarch64
        path: build/*.so
        
  build-windows-x64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build release
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        cmake --build . --config=release
    - uses: actions/upload-artifact@v4
      with:
        name: windows-x64
        path: build/release/*.dll

  build-windows-x86:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build release
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -A Win32
        cmake --build . --config=release
    - uses: actions/upload-artifact@v4
      with:
        name: windows-x86
        path: build/release/*.dll

  build-windows-aarch64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build release
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -A ARM64
        cmake --build . --config=release
    - uses: actions/upload-artifact@v4
      with:
        name: windows-aarch64
        path: build/release/*.dll

  build-macos-x64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build release
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=arm64
        cmake --build . --config=release
    - uses: actions/upload-artifact@v4
      with:
        name: macos-x64
        path: build/*.dylib

  build-macos-aarch64:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build release
      run: |
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=x86_64
        cmake --build . --config=release
    - uses: actions/upload-artifact@v4
      with:
        name: macos-aarch64
        path: build/*.dylib

  create-release:

    if: startsWith(github.ref, 'refs/tags/v')
    needs:
    - build-linux-x64
    - build-linux-x86
    - build-linux-aarch64
    - build-windows-x64
    - build-windows-x86
    - build-windows-aarch64
    - build-macos-x64
    - build-macos-aarch64
    runs-on: ubuntu-latest

    steps:
    - uses: actions/download-artifact@v4
      with:
        path: .
    - name: Archive builds
      run: |
        mv linux-x64/sqlite_protobuf.so . && tar -zcvf sqlite_protobuf-linux-x64.tar.gz *.so && rm *.so
        mv linux-x86/sqlite_protobuf.so . && tar -zcvf sqlite_protobuf-linux-x86.tar.gz *.so && rm *.so
        mv linux-aarch64/sqlite_protobuf.so . && tar -zcvf sqlite_protobuf-linux-aarch64.tar.gz *.so && rm *.so
        mv windows-x64/sqlite_protobuf.dll . && zip sqlite_protobuf-windows-x64.zip *.dll && rm *.dll
        mv windows-x86/sqlite_protobuf.dll . && zip sqlite_protobuf-windows-x86.zip *.dll && rm *.dll
        mv windows-aarch64/sqlite_protobuf.dll . && zip sqlite_protobuf-windows-aarch64.zip *.dll && rm *.dll
        mv macos-x64/sqlite_protobuf.dylib . && zip sqlite_protobuf-macos-x64.zip *.dylib && rm *.dylib
        mv macos-aarch64/sqlite_protobuf.dylib . && zip sqlite_protobuf-macos-aarch64.zip *.dylib && rm *.dylib

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          sqlite_protobuf-linux-x64.tar.gz
          sqlite_protobuf-linux-x86.tar.gz
          sqlite_protobuf-linux-aarch64.tar.gz
          sqlite_protobuf-windows-x64.zip
          sqlite_protobuf-windows-x86.zip
          sqlite_protobuf-windows-aarch64.zip
          sqlite_protobuf-macos-x64.zip
          sqlite_protobuf-macos-aarch64.zip
