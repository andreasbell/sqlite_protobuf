# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            artifact: build/Release/*.dll
          - os: ubuntu-latest
            artifact: build/*.so
          - os: macos-latest
            artifact: build/*.dylib    

    steps:
    - uses: actions/checkout@v4

    - name: Create build directory
      working-directory: ${{ github.workspace }}
      shell: bash
      run: mkdir build

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      working-directory: ${{ github.workspace }}/build
      run: |
        cmake -B . -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ..

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      working-directory: ${{ github.workspace }}/build
      run: cmake --build . --config ${{ matrix.build_type }}
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.4
      with:
        name: ${{ matrix.os }}
        path: ${{ github.workspace }}/${{ matrix.artifact }}

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
